name: 'PHP Composer'
description: 'Use the Composer CLI in your Github Actions.'

inputs:
  composer_version:
    description: "What version of Composer to use"
    default: latest
    required: false

  command:
    description: "Composer command to run (or get_config to just get the output vars)"
    required: true
    default: install

  args:
    description: "Command line arguments to composer"
    required: false
    default: "--optimize-autoloader --no-progress"

outputs:
  composer-cache-dir:
    description: "Where composer created its cache"
    value: ${{ steps.composer-run.outputs.composer-cache-dir }}

  composer-major-version:
    description: "Major version of the composer run"
    value: ${{ steps.composer-run.outputs.composer-major-version }}

runs:
  using: "composite"
  steps:
    - env:
        COMPOSER_VERSION: ${{ inputs.composer_version }}
        COMPOSER_COMMAND: ${{ inputs.command }}
        COMPOSER_ARGS: ${{ inputs.args }}
      shell: bash
      id: composer-run
      run: |
        set -ex

        # Make sure the latest version is available, pull it quietly
        docker pull -q composer:$COMPOSER_VERSION

        MAJOR_VERSION=$(docker run --rm composer:$COMPOSER_VERSION --version | perl -pe '($_)=/\b(\d)\d*\.\d+\.\d+/;')
        echo "::set-output name=composer-cache-dir::${RUNNER_WORKSPACE}/composer/cache"
        echo "::set-output name=composer-major-version::${DETECT_COMPOSER_MAJOR_VERSION}"

        if [ "$COMPOSER_ACTION" -eq "get_config" ]; then
          exit
        fi

        docker run --rm \
          --volume ${RUNNER_WORKSPACE}/composer:/tmp \
          --volume ${GITHUB_WORKSPACE}:/app \
          -w /app \
          composer:$COMPOSER_VERSION $COMPOSER_COMMAND $COMPOSER_ARGS

branding:
  icon: 'package'
  color: 'purple'
